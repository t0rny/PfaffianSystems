var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = PfaffianSystems","category":"page"},{"location":"#PfaffianSystems","page":"Home","title":"PfaffianSystems","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for PfaffianSystems.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [PfaffianSystems]","category":"page"},{"location":"#AbstractAlgebra.vars-Tuple{T} where T<:PfaffianSystems.AbstractDiffOp","page":"Home","title":"AbstractAlgebra.vars","text":"vars(wae::T) where T <: AbstractDiffOp\n\nExamples\n\njulia> D, (x, y), (dx, dy) = weyl_algebra([\"x\", \"y\"])\n(2-d Weyl algebra in [x,y], PfaffianSystems.WAlgElem{AbstractAlgebra.Generic.MPoly{AbstractAlgebra.Generic.MPoly{Rational{BigInt}}}}[x, y], PfaffianSystems.WAlgElem{AbstractAlgebra.Generic.MPoly{AbstractAlgebra.Generic.MPoly{Rational{BigInt}}}}[dx, dy])\njulia> vars(x+y)\n2-element Vector{PfaffianSystems.WAlgElem{AbstractAlgebra.Generic.MPoly{AbstractAlgebra.Generic.MPoly{Rational{BigInt}}}}}:\n x\n y\n\n\n\n\n\n","category":"method"},{"location":"#PfaffianSystems.diff_op_ring-Tuple{AbstractAlgebra.Field, AbstractVector{<:AbstractString}}","page":"Home","title":"PfaffianSystems.diff_op_ring","text":"Ring of differential operators over rational functions\n\n\n\n\n\n","category":"method"},{"location":"#PfaffianSystems.dvars-Tuple{T} where T<:PfaffianSystems.AbstractDiffOp","page":"Home","title":"PfaffianSystems.dvars","text":"dvars(wae::T) where T <: AbstractDiffOp\n\nExamples\n\njulia> D, (x, y), (dx, dy) = weyl_algebra([\"x\", \"y\"])\n(2-d Weyl algebra in [x,y], PfaffianSystems.WAlgElem{AbstractAlgebra.Generic.MPoly{AbstractAlgebra.Generic.MPoly{Rational{BigInt}}}}[x, y], PfaffianSystems.WAlgElem{AbstractAlgebra.Generic.MPoly{AbstractAlgebra.Generic.MPoly{Rational{BigInt}}}}[dx, dy])\njulia> dvars(dx^2+y)\n1-element Vector{PfaffianSystems.WAlgElem{AbstractAlgebra.Generic.MPoly{AbstractAlgebra.Generic.MPoly{Rational{BigInt}}}}}:\n dx\n\n\n\n\n\n","category":"method"},{"location":"#PfaffianSystems.isAsirAvailable-Tuple{}","page":"Home","title":"PfaffianSystems.isAsirAvailable","text":"Return the version of available Asir as an integer if exists, and otherwise return nothing. \n\n\n\n\n\n","category":"method"},{"location":"#PfaffianSystems.leading_term","page":"Home","title":"PfaffianSystems.leading_term","text":"leading_term(f::DORElem, order::Symbol=:lex)\n\nReturn the leading term of f with respect to order.  Only order=:lex is supported now.\n\n\n\n\n\n","category":"function"},{"location":"#PfaffianSystems.normalform-Union{Tuple{T}, Tuple{T, Vector{T}}} where T<:PfaffianSystems.DORElem","page":"Home","title":"PfaffianSystems.normalform","text":"normalform(f::T, G::Vector{T}) where T<: DORElem\n\nCompute normal form of f with respect to G and return the remainder r and quotients q.\n\n\n\n\n\n","category":"method"},{"location":"#PfaffianSystems.parseAsir-Tuple{AbstractString}","page":"Home","title":"PfaffianSystems.parseAsir","text":"parseAsir(asir_res::String)\n\nAdd square brackets and separete the response into lines. \n\n\n\n\n\n","category":"method"},{"location":"#PfaffianSystems.pfaffian_system-Union{Tuple{T}, Tuple{Vector{T}, Vector{T}}} where T<:PfaffianSystems.DORElem","page":"Home","title":"PfaffianSystems.pfaffian_system","text":"pfaffian_system(G::Vector{T}, S::Vector{T}) where T <: DORElem\n\nExamples\n\njulia> R, (x, y), (dx, dy) = diff_op_ring([\"x\", \"y\"])\n(2-dimensional ring of differential opeartors in [x,y], PfaffianSystems.DORElem{AbstractAlgebra.Generic.MPoly{AbstractAlgebra.Generic.RationalFunctionFieldElem{Rational{BigInt}, AbstractAlgebra.Generic.MPoly{Rational{BigInt}}}}}[x, y], PfaffianSystems.DORElem{AbstractAlgebra.Generic.MPoly{AbstractAlgebra.Generic.RationalFunctionFieldElem{Rational{BigInt}, AbstractAlgebra.Generic.MPoly{Rational{BigInt}}}}}[dx, dy])\njulia> pfaffian_system([dx^2 + 1, dy^2 + 1], [one(dx), dx, dy])\n2-element Vector{Matrix{AbstractAlgebra.Generic.RationalFunctionFieldElem{Rational{BigInt}, AbstractAlgebra.Generic.MPoly{Rational{BigInt}}}}}:\n [0 1 0; -1 0 0; 0 0 0]\n [0 0 1; 0 0 0; -1 0 0]\n\n\n\n\n\n","category":"method"},{"location":"#PfaffianSystems.runAsir-Tuple{AbstractString}","page":"Home","title":"PfaffianSystems.runAsir","text":"runAsir(commands::AbstractString)\n\nRun commands on Asir. The raw response of Asir is returned as a string. \n\n\n\n\n\n","category":"method"},{"location":"#PfaffianSystems.stdmon-Union{Tuple{T}, Tuple{DIdeal{T}, OrderedCollections.OrderedSet{T}}} where T<:PfaffianSystems.DORElem","page":"Home","title":"PfaffianSystems.stdmon","text":"stdmon!(I::DIdeal[, ordered_vars::Vector{Num}])\n\nCompute standard monomials if I is zero-dimensional as an ideal of R-ring. The order of varaibles in the computation of Grobner bases can be provided as ordered_vars, which can be omitted as long as the computational time is not crutial. \n\n\n\n\n\n","category":"method"},{"location":"#PfaffianSystems.vec2str-Tuple{AbstractVector}","page":"Home","title":"PfaffianSystems.vec2str","text":"vec2str(v::AbstractVector; delim=\",\")\nvec2str(v::AbstractDiffOp; delim=\",\")\nvec2str(vs...; delim=\",\")\n\nReturn a string consiting of all elements of v with delimiter delim. \n\n\n\n\n\n","category":"method"},{"location":"#PfaffianSystems.weyl_algebra-Tuple{AbstractAlgebra.Field, AbstractVector{<:AbstractString}}","page":"Home","title":"PfaffianSystems.weyl_algebra","text":"WeylAlgebra\n\n\n\n\n\n","category":"method"},{"location":"#PfaffianSystems.wnormalform-Union{Tuple{T}, Tuple{T, Vector{T}}} where T<:PfaffianSystems.DORElem","page":"Home","title":"PfaffianSystems.wnormalform","text":"wnormalform(f::T, G::Vector{T}) where T<: DORElem Compute weak normal form of f with respect to G and return the remainder r and quotients q.\n\n\n\n\n\n","category":"method"}]
}
